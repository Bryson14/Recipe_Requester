{"version":3,"sources":["images/roberto-valdivia-rcUw6b4iYe0-unsplash.jpg","components/welcome.js","components/step_number.js","components/recipe_name.js","components/category.js","components/sub_category.js","components/control_button.js","components/time.js","components/ingredient_item.js","components/ingredients.js","components/ingredient_list.js","components/instructions.js","components/modal_confirm.js","components/thanks.js","components/user_step_form.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","nextStep","requester","className","onClick","src","pic","alt","StepNumber","number","RecipeName","handleChange","name","type","value","onChange","maxLength","onKeyDown","e","key","autoFocus","placeholder","Category","category","categories","itemsSelect","length","map","item","i","this","class","for","id","selected","Subcategory","subcategories","subcategory","ControlButton","func","text","Time","time","cookTime","prepTime","enterKey","pattern","IngredientItem","idx","removeItem","Ingredients","ingredients","prevStep","useState","ingredient","setIngredient","addIngredient","newIngredients","concat","document","getElementById","focus","splice","target","ingre","IngredientList","Instructions","instructions","instruction","setInstruction","newInstructions","instruc","ModalConfirm","submit_record","Thanks","base","require","apiKey","process","UserStepForm","state","step","subCategory","totalTime","setState","input","console","log","steps","complexSetState","props","createRecord","a","self","create","Number","JSON","stringify","err","records","error","alert","forEach","record","getId","s","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d1666ce9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roberto-valdivia-rcUw6b4iYe0-unsplash.11040231.jpg\";","import pic from \"../images/roberto-valdivia-rcUw6b4iYe0-unsplash.jpg\"\r\n\r\nfunction Welcome ({nextStep, requester}) {\r\n    \r\n    return (\r\n        <div className=\"vert-split-div left\">\r\n            <h3 className=\"span-left\">Recipe Grabber</h3>\r\n            <button onClick={nextStep} className=\"span-left btn btn-warning\">Start</button>\r\n            <h1  className=\"span-left\">{requester} wants a recipe from you!</h1>\r\n            <p  className=\"span-left\">5 Minutes now saves a recipe for a generation.</p>\r\n            <img  className=\"img-vert-half span-right\" src={pic} \r\n            alt=\"Homemade pizza which has been passed down for generations\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","function StepNumber({number}) {\r\n    return (\r\n        <p>\r\n            <u>{number}</u>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default StepNumber;","import StepNumber from './step_number';\r\n\r\n\r\nfunction RecipeName ({handleChange, name, nextStep}) {\r\n\r\n    function enterKey(e) {\r\n        if (e.key === 'Enter') {\r\n            nextStep();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"vert-split-div\">\r\n                <h3 className=\"span-left\">What is the name of your recipe?</h3>\r\n                <p className=\"span-left\">Something clever like <b><i>Grandma's Killer Cinnamon Orange Rolls</i></b> sounds better than just <b><i>Cinnamon Rolls</i></b>.</p>\r\n                <div className=\"span-right\">\r\n                    <span>\r\n                        <StepNumber number=\"01\" />\r\n                    <input type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={name} \r\n                        onChange={handleChange('name')} \r\n                        maxLength=\"100\" \r\n                        onKeyDown={enterKey}\r\n                        autoFocus\r\n                        placeholder=\"Recipe Name\"></input>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div className=\"vert-split-div\">\r\n                <div className=\"span-right\">\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default RecipeName;","function Category ({handleChange, category}) {\r\n\r\n    \r\n\r\n    let categories = [\"Meat\", \"Soup\", \"Appetizer\", \"Dessert\"];\r\n\r\n    let itemsSelect = categories.length > 0 && \r\n    categories.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item}>{item}</option>\r\n      )\r\n    }, this);\r\n    \r\n    return (\r\n        <div>\r\n          <h1 className=\"page-title\">Category</h1>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\r\n            </div>\r\n            <select onChange={handleChange(\"category\")} value={category} class=\"custom-select\" id=\"inputGroupSelect01\">\r\n              <option selected>Choose...</option>\r\n              {itemsSelect}\r\n            </select>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","function Subcategory ({handleChange, category, subcategory}) {\r\n\r\n    let subcategories;\r\n\r\n    switch(category) {\r\n        case \"Meat\":\r\n            subcategories = [\"Chicken\", \"Pork\", \"Beef\", \"Seafood\"];\r\n            break;\r\n        case \"Soup\":\r\n            subcategories = [\"Savory\", \"Light\", \"Creamy\", \"Broth\"];\r\n            break;\r\n        case \"Appetizer\":\r\n            subcategories = [\"Fried\", \"Vegetable\", \"Restaurant Style\"];\r\n            break;\r\n        case \"Dessert\":\r\n            subcategories = [\"Chocolate\", \"Fruit\", \"Other\"];\r\n            break;\r\n        default:\r\n            subcategories = [\"Test Item\", \"Something\"];\r\n            break;\r\n\r\n    }\r\n\r\n    let itemsSelect = subcategories.length > 0 && \r\n    subcategories.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item}>{item}</option>\r\n      )\r\n    }, this);\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"page-title\">Sub Category</h1>\r\n            <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n                <label  class=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\r\n            </div>\r\n            <select onChange={handleChange(\"subCategory\")} value={subcategory} class=\"custom-select\" id=\"inputGroupSelect01\">\r\n                <option selected>Choose...</option>\r\n                {itemsSelect}\r\n            </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subcategory;","function ControlButton ({func, text}) {\r\n\r\n    return (\r\n        <button onClick={func} className=\"btn-spacer btn btn-primary\">{text}</button>\r\n    )   \r\n}\r\n\r\nexport default ControlButton;","function Time ({handleChange, time, cookTime, prepTime, nextStep, name}) {\r\n\r\n    function enterKey(e) {\r\n        if (e.key === 'Enter' && time > 0 && prepTime > 0 && cookTime > 0) {\r\n            nextStep();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"page-title\">Time</h1>\r\n            <p>What's the total time to make <i>{name}</i>?</p>\r\n            <input type=\"number\" pattern=\"\\d*\" className=\"form-control\" placeholder=\"Total Time in Minutes\" value={time} onKeyDown={enterKey} onChange={handleChange(\"totalTime\")} />\r\n\r\n            <p>How much time is needed to prep <i>{name}</i>?</p>\r\n            <input type=\"number\" pattern=\"\\d*\" className=\"form-control\" placeholder=\"Prep Time in Minutes\" value={prepTime} onKeyDown={enterKey} onChange={handleChange(\"prepTime\")} />\r\n\r\n            <p>How long does <i>{name}</i> need to cook for?</p>\r\n            <input type=\"number\" pattern=\"\\d*\" className=\"form-control\" placeholder=\"Cook Time in Minutes\" value={cookTime} onKeyDown={enterKey} onChange={handleChange(\"cookTime\")} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;","function IngredientItem({text, idx, removeItem}) {\r\n\r\n    return (\r\n        <div class=\"input-group mb-3\">\r\n            <p  class=\"form-control\">{text}</p>\r\n            <div class=\"input-group-append\">\r\n                <button class=\"input-group-text btn btn-outline-secondary\" \r\n                id=\"basic-addon2\" \r\n                onClick={(e) => {removeItem(idx, e);}}> X </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientItem;","import {useState} from \"react\";\r\nimport IngredientItem from './ingredient_item'\r\nimport ControlButton from \"./control_button\";\r\n\r\nfunction Ingredients ({handleChange, ingredients, nextStep, prevStep}) {\r\n\r\n    const [ingredient, setIngredient] = useState(\"\");\r\n\r\n    function enterKey(e) {\r\n        if (e.key === 'Enter') {\r\n            addIngredient(e);\r\n        }\r\n    }\r\n\r\n    function onValueChange(e) {\r\n        setIngredient(e.target.value);\r\n    };\r\n\r\n    function addIngredient(e) {\r\n        if (ingredient === \"\") {\r\n            return;\r\n        }\r\n        let newIngredients = [ingredient].concat(ingredients);\r\n        setIngredient(\"\");\r\n        handleChange({key: 'ingredients', value: newIngredients});\r\n        document.getElementById(\"ingredient-input\").focus();\r\n    };\r\n\r\n    function removeItem(idx, e) {\r\n        ingredients.splice(idx, 1);\r\n        handleChange({key: 'ingredients', value: ingredients});\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"page-title\">Ingredients</h1>\r\n            <p>Add the amount of the ingredient as well. For example, say \"3 cups of unbleached flour\"</p>\r\n            \r\n            <ControlButton func={prevStep} text=\"Back\" />\r\n            <ControlButton func={nextStep} text=\"Next\" />\r\n            <hr />\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <button class=\"input-group-text btn btn-success m-2\" onClick={addIngredient} id=\"basic-addon1\">Add Ingredient</button>\r\n                </div>\r\n                <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"ingredient-input\"\r\n                value={ingredient}\r\n                onChange={onValueChange}\r\n                autoFocus\r\n                placeholder='Type an Ingredient'\r\n                onKeyDown={enterKey}\r\n            />\r\n            </div>\r\n\r\n            {\r\n                ingredients.length > 0 ?\r\n                <ol>\r\n                    {ingredients.map((ingre, idx) => \r\n                        <li key={ingre.key}><IngredientItem text={ingre} idx={idx} removeItem={removeItem}/></li>)}\r\n                </ol>\r\n                :\r\n                <p>You have no ingredients. Add some!</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ingredients;\r\n\r\n","function IngredientList({ingredients}) {\r\n\r\n    return (\r\n\r\n            <div class=\"panel panel-primary\" id=\"result_panel\">\r\n            <div class=\"panel-heading\">\r\n                <h3 class=\"panel-title\">Your Ingredients</h3>\r\n            </div>\r\n            <div class=\"panel-body\">\r\n                <ul class=\"list-group\">\r\n                    {ingredients.map((ingre, idx) => \r\n                            <li key={idx} className=\"list-group-item\">{ingre}</li>)}\r\n                </ul>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default IngredientList;","import IngredientList from \"./ingredient_list\";\r\nimport {useState} from \"react\";\r\nimport IngredientItem from \"./ingredient_item\";\r\n\r\nfunction Instructions ({handleChange, ingredients, instructions}) {\r\n\r\n    const [instruction, setInstruction] = useState(\"\");\r\n\r\n    function onValueChange(e) {\r\n        setInstruction(e.target.value);\r\n    };\r\n\r\n    function addInstruction(e) {\r\n        if (instruction === \"\") {\r\n            return;\r\n        }\r\n        let newInstructions = instructions.concat([instruction]);\r\n        setInstruction(\"\");\r\n        handleChange({key: 'instructions', value: newInstructions});\r\n        document.getElementById(\"instruction-input\").focus();\r\n    };\r\n\r\n    function removeItem(idx, e) {\r\n        instructions.splice(idx, 1);\r\n        handleChange({key: 'instructions', value: instructions});\r\n    };\r\n    \r\n    return (\r\n        \r\n        <div className=\"container text-center\">\r\n            <h1 className=\"page-title\">Instructions</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className='col-sm-12 col-md-8'>\r\n\r\n                    <div className=\"row\">\r\n                        <input\r\n                        type=\"text\" \r\n                        id='instruction-input'\r\n                        className=\"form-control large-input\"\r\n                        onChange={onValueChange}\r\n                        value={instruction} \r\n                        maxLength=\"500\"\r\n                        placeholder='Type out instructions and click \"Add Instruction\" for each step...'/>\r\n                    </div>\r\n                    <div className='container row text-center '>\r\n                        <button className=\"btn btn-secondary m-3\" onClick={addInstruction}>Add Instruction</button>\r\n                    </div>\r\n                </div>\r\n                <div className='col-sm-12 col-md-4 p-4'>\r\n                    {ingredients.length > 0 ?\r\n                <IngredientList ingredients={ingredients} />\r\n                :\r\n                <p>You still haven't added ingredients 😭</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                    <p className=\"h4\">Your Instructions</p>\r\n                    <hr />\r\n                    {instructions.length > 0?\r\n                        <ol>\r\n                            {instructions.map((instruc, idx) => \r\n                                <li key={idx}><IngredientItem text={instruc} idx={idx} removeItem={removeItem}/></li>)}\r\n                        </ol>\r\n                        :\r\n                            <p>How can I make this recipe with no ingredients? 👩‍🍳</p>\r\n                            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React from \"react\"\r\n\r\nconst ModalConfirm = ({submit_record, prevStep}) => {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">Confirm Submit</h4>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <button className=\"btn btn-danger modal-button\" onClick={prevStep}>Cancel</button>\r\n                    <button className=\"btn btn-success modal-button\" onClick={submit_record}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalConfirm;","function Thanks ({name}) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"page-title\">Thank You!</h1>\r\n            <p>You time here will keep <b><i>{name !==\"\"? name : \"your recipe\"}</i></b> alive.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thanks;","import React, {Component} from 'react';\r\nimport Welcome from \"./welcome\";\r\nimport RecipeName from \"./recipe_name\";\r\nimport Category from \"./category\";\r\nimport Subcategory from './sub_category';\r\nimport ControlButton from './control_button';\r\nimport Time from './time';\r\nimport Ingredients from './ingredients';\r\nimport Instructions from './instructions';\r\nimport ModalConfim from './modal_confirm';\r\nimport Thanks from './thanks';\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: process.env.REACT_APP_API_KEY}).base('app3Gf3GAi6tb6C0t');\r\n\r\nexport class UserStepForm extends Component {\r\n\r\n    state = {\r\n        step: 1,\r\n        name: \"\",\r\n        category: \"\",\r\n        subCategory: \"\",\r\n        prepTime: \"\",\r\n        cookTime: \"\",\r\n        totalTime: \"\",\r\n        ingredients: [],\r\n        instructions: [],\r\n        requester: \"Bryson\"\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        })\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        })\r\n    }\r\n\r\n        // Handle fields change\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n\r\n        console.log(`Name:${this.state.name}\\nCategory:${this.state.category}\r\n        \\nSubCat:${this.state.subCategory}\\ntime:${this.state.totalTime}\r\n        \\ningredients:${this.state.ingredients}\\nsteps:${this.state.steps}\\nInstructions:${this.state.instructions}`);\r\n    };\r\n\r\n    // a more complicated state set where to logic is in ingredients.js and instructions.js\r\n    complexSetState = props => {\r\n        this.setState({ [props.key]: props.value});\r\n    } \r\n\r\n    createRecord = async () => {\r\n        let self = this;\r\n        base('Recipes').create([\r\n            {\r\n                \"fields\": {\r\n                  \"Name\": this.state.name,\r\n                  \"Category\": this.state.category,\r\n                  \"Subcategory\": this.state.subCategory,\r\n                  \"totalTime\": Number(this.state.totalTime),\r\n                  \"prepTime\": Number(this.state.prepTime),\r\n                  \"cookTime\": Number(this.state.cookTime),\r\n                  \"Ingredients\": JSON.stringify(this.state.ingredients),\r\n                  \"Instructions\": JSON.stringify(this.state.instructions)\r\n                }\r\n              }\r\n          ], function(err, records) {\r\n            if (err) {\r\n              console.error(err);\r\n              alert(\"There was a problem submitting the data to Airtable.\")\r\n              return;\r\n            } else {\r\n                records.forEach(function (record) {\r\n                    console.log(record.getId());\r\n                  });\r\n                self.nextStep();\r\n            }\r\n          });\r\n    };\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {name, category, subCategory, prepTime, cookTime, totalTime, ingredients, instructions, requester} =  this.state;\r\n\r\n        switch(step) {\r\n        case 1: \r\n        return (\r\n            <>\r\n                <Welcome requester={requester} nextStep={this.nextStep}/>\r\n            </>\r\n        )\r\n        case 2: \r\n        return (\r\n            <>\r\n                <RecipeName handleChange={this.handleChange} name={name} nextStep={this.nextStep}/>\r\n                <ControlButton func={this.prevStep} text=\"Back\" />\r\n                <ControlButton func={this.nextStep} text=\"Next\" />\r\n            </>\r\n        )\r\n        case 3: \r\n        return (\r\n            <>\r\n                <Category  handleChange={this.handleChange} category={category}/>\r\n                <ControlButton func={this.prevStep} text=\"Back\" />\r\n                <ControlButton func={this.nextStep} text=\"Next\" />\r\n            </>\r\n        )\r\n        case 4: \r\n        return (\r\n            <>\r\n                <Subcategory  handleChange={this.handleChange} subcategory={subCategory} category={category} s/>\r\n                <ControlButton func={this.prevStep} text=\"Back\" />\r\n                <ControlButton func={this.nextStep} text=\"Next\" />\r\n            </>\r\n        )\r\n        case 5: \r\n        return (\r\n            <>\r\n                <Time  handleChange={this.handleChange} time={totalTime} prepTime={prepTime} cookTime={cookTime} nextStep={this.nextStep} name={name}/>\r\n                <ControlButton func={this.prevStep} text=\"Back\" />\r\n                <ControlButton func={this.nextStep} text=\"Next\" />\r\n            </>\r\n        ) \r\n        case 6: \r\n        return (\r\n            <>\r\n                <Ingredients  handleChange={this.complexSetState} ingredients={ingredients} nextStep={this.nextStep} prevStep={this.prevStep}/>\r\n            </>\r\n        ) \r\n        case 7: \r\n        return (\r\n            <>\r\n                <Instructions  handleChange={this.complexSetState} ingredients={ingredients} instructions={instructions}/>\r\n                <ControlButton func={this.prevStep} text=\"Back\" />\r\n                <button className=\"btn btn-success\" onClick={this.nextStep} >Finish</button>\r\n            </>\r\n        ) \r\n        case 8: \r\n        return (\r\n            <>\r\n                <Instructions  handleChange={this.complexSetState} ingredients={ingredients} instructions={instructions}/>\r\n                <ModalConfim prevStep={this.prevStep} submit_record={this.createRecord} />\r\n            </>\r\n        )\r\n        case 9: \r\n        return (\r\n            <>\r\n                <Thanks name={name}/>\r\n            </>\r\n        )  \r\n        default:\r\n            return (\r\n                <div>\r\n                    Unknown Error\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserStepForm;","import React from \"react\";\r\nimport UserStepform from \"./components/user_step_form\"\r\n\r\nexport default function App() {\r\n  return (\r\n    <div  className=\"user-form\">\r\n       <UserStepform /> \r\n    </div>\r\n    \r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}