{"version":3,"sources":["images/roberto-valdivia-rcUw6b4iYe0-unsplash.jpg","components/welcome.js","components/step_number.js","components/recipe_name.js","components/category.js","components/control_button.js","components/time.js","components/ingredient_item.js","components/ingredients.js","components/ingredient_list.js","components/instructions.js","components/modal_confirm.js","components/render_recipe.js","components/thanks.js","components/user_step_form.js","components/recipe_view.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","nextStep","requester","history","useHistory","className","onClick","src","pic","alt","e","push","StepNumber","number","RecipeName","handleChange","name","type","value","onChange","maxLength","onKeyDown","key","autoFocus","placeholder","Category","category","categories","itemsSelect","length","map","item","i","this","class","for","id","selected","ControlButton","func","text","Time","time","cookTime","prepTime","enterKey","pattern","IngredientItem","idx","removeItem","Ingredients","ingredients","prevStep","useState","ingredient","setIngredient","addIngredient","newIngredients","concat","document","getElementById","focus","splice","target","ingre","IngredientList","Instructions","instructions","instruction","setInstruction","addInstruction","newInstructions","instruc","ModalConfirm","submit_record","RenderRecipe","totaltime","preptime","cooktime","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Thanks","base","require","apiKey","process","UserStepForm","state","step","totalTime","setState","input","complexSetState","props","createRecord","a","self","create","fields","Name","Number","JSON","stringify","err","records","console","error","alert","forEach","record","log","getId","params","URLSearchParams","window","location","search","has","get","Component","myrecipes","select","view","eachPage","fetchNextPage","parse","RecipeView","recipe","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.248bf770.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/roberto-valdivia-rcUw6b4iYe0-unsplash.11040231.jpg\";","import pic from \"../images/roberto-valdivia-rcUw6b4iYe0-unsplash.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Welcome({ nextStep, requester }) {\r\n  let history = useHistory();\r\n\r\n  function goToRecipes(e) {\r\n    history.push(\"/recipes\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"vert-split-div left\">\r\n        <h3 className=\"span-left\">Recipe Grabber</h3>\r\n        <button onClick={nextStep} className=\"span-left btn btn-warning\">\r\n          Start\r\n        </button>\r\n        <h1 className=\"span-left\">{requester} wants a recipe from you!</h1>\r\n        <p className=\"span-left\">\r\n          5 Minutes now saves a recipe for a generation.\r\n        </p>\r\n        <img\r\n          className=\"img-vert-half span-right\"\r\n          src={pic}\r\n          alt=\"Homemade pizza which has been passed down for generations\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-secondary\" onClick={goToRecipes}>\r\n          See Recipe Book!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","function StepNumber({ number }) {\r\n  return (\r\n    <p>\r\n      <u>{number}</u>\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default StepNumber;\r\n","import StepNumber from \"./step_number\";\r\n\r\nfunction RecipeName({ handleChange, name, nextStep }) {\r\n  function enterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      nextStep();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"vert-split-div\">\r\n        <h3 className=\"span-left\">What is the name of your recipe?</h3>\r\n        <p className=\"span-left\">\r\n          Something clever like{\" \"}\r\n          <b>\r\n            <i>Grandma's Killer Cinnamon Orange Rolls</i>\r\n          </b>{\" \"}\r\n          sounds better than just{\" \"}\r\n          <b>\r\n            <i>Cinnamon Rolls</i>\r\n          </b>\r\n          .\r\n        </p>\r\n        <div className=\"span-right\">\r\n          <span>\r\n            <StepNumber number=\"01\" />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={name}\r\n              onChange={handleChange(\"name\")}\r\n              maxLength=\"100\"\r\n              onKeyDown={enterKey}\r\n              autoFocus\r\n              placeholder=\"Recipe Name\"\r\n            ></input>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeName;\r\n","function Category({ handleChange, category }) {\r\n  let categories = [\r\n    \"Breakfast\",\r\n    \"Lunch\",\r\n    \"Beverages\",\r\n    \"Appetizers\",\r\n    \"Soups\",\r\n    \"Salads\",\r\n    \"Main dishes: Beef\",\r\n    \"Main dishes: Poultry\",\r\n    \"Main dishes: Pork\",\r\n    \"Main dishes: Seafood\",\r\n    \"Main dishes: Vegetarian\",\r\n    \"Side dishes: Vegetables\",\r\n    \"Side dishes: Other\",\r\n    \"Desserts\",\r\n    \"Canning / Freezing\",\r\n    \"Breads\",\r\n    \"Holidays\",\r\n    \"Entertaining\",\r\n  ];\r\n\r\n  let itemsSelect =\r\n    categories.length > 0 &&\r\n    categories.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item}>\r\n          {item}\r\n        </option>\r\n      );\r\n    }, this);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"page-title\">Category</h1>\r\n      <div class=\"input-group mb-3\">\r\n        <div class=\"input-group-prepend\">\r\n          <label class=\"input-group-text\" for=\"inputGroupSelect01\">\r\n            Options\r\n          </label>\r\n        </div>\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          value={category}\r\n          className=\"form-control\"\r\n          id=\"inputGroupSelect01\"\r\n        >\r\n          <option selected>Choose...</option>\r\n          {itemsSelect}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","function ControlButton({ func, text }) {\r\n  return (\r\n    <button onClick={func} className=\"btn-spacer btn btn-primary\">\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ControlButton;\r\n","function Time({ handleChange, time, cookTime, prepTime, nextStep, name }) {\r\n  function enterKey(e) {\r\n    if (e.key === \"Enter\" && time > 0 && prepTime > 0 && cookTime > 0) {\r\n      nextStep();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"page-title\">Time</h1>\r\n      <p>\r\n        What's the total time to make <i>{name}</i>?\r\n      </p>\r\n      <input\r\n        type=\"number\"\r\n        pattern=\"\\d*\"\r\n        className=\"form-control\"\r\n        placeholder=\"Total Time in Minutes\"\r\n        value={time}\r\n        onKeyDown={enterKey}\r\n        onChange={handleChange(\"totalTime\")}\r\n      />\r\n\r\n      <p>\r\n        How much time is needed to prep <i>{name}</i>?\r\n      </p>\r\n      <input\r\n        type=\"number\"\r\n        pattern=\"\\d*\"\r\n        className=\"form-control\"\r\n        placeholder=\"Prep Time in Minutes\"\r\n        value={prepTime}\r\n        onKeyDown={enterKey}\r\n        onChange={handleChange(\"prepTime\")}\r\n      />\r\n\r\n      <p>\r\n        How long does <i>{name}</i> need to cook for?\r\n      </p>\r\n      <input\r\n        type=\"number\"\r\n        pattern=\"\\d*\"\r\n        className=\"form-control\"\r\n        placeholder=\"Cook Time in Minutes\"\r\n        value={cookTime}\r\n        onKeyDown={enterKey}\r\n        onChange={handleChange(\"cookTime\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;\r\n","function IngredientItem({ text, idx, removeItem }) {\r\n  return (\r\n    <div class=\"input-group mb-3\">\r\n      <p class=\"form-control\">{text}</p>\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"input-group-text btn btn-outline-secondary\"\r\n          id=\"basic-addon2\"\r\n          onClick={(e) => {\r\n            removeItem(idx, e);\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientItem;\r\n","import { useState } from \"react\";\r\nimport IngredientItem from \"./ingredient_item\";\r\nimport ControlButton from \"./control_button\";\r\n\r\nfunction Ingredients({ handleChange, ingredients, nextStep, prevStep }) {\r\n  const [ingredient, setIngredient] = useState(\"\");\r\n\r\n  function enterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      addIngredient(e);\r\n    }\r\n  }\r\n\r\n  function onValueChange(e) {\r\n    setIngredient(e.target.value);\r\n  }\r\n\r\n  function addIngredient(e) {\r\n    if (ingredient === \"\") {\r\n      return;\r\n    }\r\n    let newIngredients = [ingredient].concat(ingredients);\r\n    setIngredient(\"\");\r\n    handleChange({ key: \"ingredients\", value: newIngredients });\r\n    document.getElementById(\"ingredient-input\").focus();\r\n  }\r\n\r\n  function removeItem(idx, e) {\r\n    ingredients.splice(idx, 1);\r\n    handleChange({ key: \"ingredients\", value: ingredients });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"page-title\">Ingredients</h1>\r\n      <p>\r\n        Add the amount of the ingredient as well. For example, say \"3 cups of\r\n        unbleached flour\"\r\n      </p>\r\n\r\n      <ControlButton func={prevStep} text=\"Back\" />\r\n      <ControlButton func={nextStep} text=\"Next\" />\r\n      <div>\r\n        <small>\r\n          Pressing <kbd>Enter</kbd> will auto add your ingredient!\r\n        </small>\r\n      </div>\r\n\r\n      <hr />\r\n      <div class=\"input-group mb-3\">\r\n        <div class=\"input-group-prepend\">\r\n          <button\r\n            class=\"input-group-text btn btn-success m-2\"\r\n            onClick={addIngredient}\r\n            id=\"basic-addon1\"\r\n          >\r\n            Add Ingredient\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"ingredient-input\"\r\n          value={ingredient}\r\n          onChange={onValueChange}\r\n          autoFocus\r\n          placeholder=\"Type an Ingredient\"\r\n          onKeyDown={enterKey}\r\n        />\r\n      </div>\r\n\r\n      {ingredients.length > 0 ? (\r\n        <ol>\r\n          {ingredients.map((ingre, idx) => (\r\n            <li key={ingre.key}>\r\n              <IngredientItem text={ingre} idx={idx} removeItem={removeItem} />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      ) : (\r\n        <p>You have no ingredients. Add some!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ingredients;\r\n","function IngredientList({ ingredients }) {\r\n  return (\r\n    <div class=\"panel panel-primary\" id=\"result_panel\">\r\n      <div class=\"panel-heading\">\r\n        <h3 class=\"panel-title\">Your Ingredients</h3>\r\n      </div>\r\n      <div class=\"panel-body\">\r\n        <ul class=\"list-group\">\r\n          {ingredients.map((ingre, idx) => (\r\n            <li key={idx} className=\"list-group-item\">\r\n              {ingre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientList;\r\n","import IngredientList from \"./ingredient_list\";\r\nimport { useState } from \"react\";\r\nimport IngredientItem from \"./ingredient_item\";\r\n\r\nfunction Instructions({ handleChange, ingredients, instructions }) {\r\n  const [instruction, setInstruction] = useState(\"\");\r\n\r\n  function onValueChange(e) {\r\n    setInstruction(e.target.value);\r\n  }\r\n\r\n  function enterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      addInstruction(e);\r\n    }\r\n  }\r\n\r\n  function addInstruction(e) {\r\n    if (instruction === \"\") {\r\n      return;\r\n    }\r\n    let newInstructions = instructions.concat([instruction]);\r\n    setInstruction(\"\");\r\n    handleChange({ key: \"instructions\", value: newInstructions });\r\n    document.getElementById(\"instruction-input\").focus();\r\n  }\r\n\r\n  function removeItem(idx, e) {\r\n    instructions.splice(idx, 1);\r\n    handleChange({ key: \"instructions\", value: instructions });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1 className=\"page-title\">Instructions</h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-md-8\">\r\n          <div className=\"row\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"instruction-input\"\r\n              className=\"form-control large-input\"\r\n              onChange={onValueChange}\r\n              value={instruction}\r\n              maxLength=\"500\"\r\n              onKeyDown={enterKey}\r\n              placeholder='Type out instructions and click \"Add Instruction\" for each step...'\r\n            />\r\n          </div>\r\n          <div className=\"container row text-center \">\r\n            <button className=\"btn btn-secondary m-3\" onClick={addInstruction}>\r\n              Add Instruction\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-12 col-md-4 p-4\">\r\n          {ingredients.length > 0 ? (\r\n            <IngredientList ingredients={ingredients} />\r\n          ) : (\r\n            <p>You still haven't added ingredients 😭</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <p className=\"h4\">Your Instructions</p>\r\n            <hr />\r\n            {instructions.length > 0 ? (\r\n              <ol>\r\n                {instructions.map((instruc, idx) => (\r\n                  <li key={idx}>\r\n                    <IngredientItem\r\n                      text={instruc}\r\n                      idx={idx}\r\n                      removeItem={removeItem}\r\n                    />\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            ) : (\r\n              <p>How can I make this recipe with no ingredients? 👩‍🍳</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\n\r\nconst ModalConfirm = ({ submit_record, prevStep }) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h4 className=\"modal-title\">Confirm Submit</h4>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <button className=\"btn btn-danger modal-button\" onClick={prevStep}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success modal-button\"\r\n            onClick={submit_record}\r\n          >\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","const RenderRecipe = ({\r\n  name,\r\n  category,\r\n  totaltime,\r\n  preptime,\r\n  cooktime,\r\n  ingredients,\r\n  instructions,\r\n}) => {\r\n  debugger;\r\n\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, \"0\");\r\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  today = mm + \"/\" + dd + \"/\" + yyyy;\r\n\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <div className=\"row\">\r\n        <h2 className=\"header-2\">{name}</h2>\r\n        <div className=\"col-lg-6 col-md-12\">\r\n          <p>\r\n            Category: <b>{category}</b>\r\n          </p>\r\n          <p>\r\n            Time: <b>{totaltime} min.</b>\r\n          </p>\r\n          <p>\r\n            Prep Time: <b>{preptime} min.</b>\r\n          </p>\r\n          <p>\r\n            Cook Time: <b>{cooktime} min.</b>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-lg-6 col-md-12\">\r\n          <h4>Ingredients</h4>\r\n          <ol>\r\n            {ingredients.map((ingre, idx) => (\r\n              <li key={idx}>{ingre}</li>\r\n            ))}\r\n          </ol>\r\n\r\n          <h4>Instructions</h4>\r\n          <ol>\r\n            {instructions.map((instruc, idx) => (\r\n              <li key={idx}>{instruc}</li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"my-4\" />\r\n      <p className=\"lead\">Thank you for you recipe! Created {today}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderRecipe;\r\n","import RenderRecipe from \"./render_recipe\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Thanks({\r\n  name,\r\n  category,\r\n  totaltime,\r\n  preptime,\r\n  cooktime,\r\n  ingredients,\r\n  instructions,\r\n}) {\r\n  let history = useHistory();\r\n\r\n  function goToRecipes(e) {\r\n    history.push(\"/recipes\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">Thank You!</h1>\r\n        <p className=\"lead\">\r\n          You time here will keep{\" \"}\r\n          <b>\r\n            <i>{name !== \"\" ? name : \"your recipe\"}</i>\r\n          </b>{\" \"}\r\n          alive.\r\n        </p>\r\n        <p>Click here to see other recipes</p>\r\n        <button className=\"btn btn-secondary\" onClick={goToRecipes}>\r\n          See Recipe Book!\r\n        </button>\r\n        <hr className=\"my-4\" />\r\n      </div>\r\n      <RenderRecipe\r\n        name={name}\r\n        category={category}\r\n        totaltime={totaltime}\r\n        preptime={preptime}\r\n        cooktime={cooktime}\r\n        ingredients={ingredients}\r\n        instructions={instructions}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thanks;\r\n","import React, { Component } from \"react\";\r\nimport Welcome from \"./welcome\";\r\nimport RecipeName from \"./recipe_name\";\r\nimport Category from \"./category\";\r\nimport ControlButton from \"./control_button\";\r\nimport Time from \"./time\";\r\nimport Ingredients from \"./ingredients\";\r\nimport Instructions from \"./instructions\";\r\nimport ModalConfim from \"./modal_confirm\";\r\nimport Thanks from \"./thanks\";\r\nvar Airtable = require(\"airtable\");\r\nvar base = new Airtable({ apiKey: process.env.REACT_APP_API_KEY }).base(\r\n  \"app3Gf3GAi6tb6C0t\"\r\n);\r\n\r\nexport class UserStepForm extends Component {\r\n  componentDidMount() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (params.has(\"requester\")) {\r\n      this.setState({ requester: params.get(\"requester\") });\r\n    }\r\n  }\r\n\r\n  state = {\r\n    step: 1,\r\n    name: \"\",\r\n    category: \"\",\r\n    prepTime: \"\",\r\n    cookTime: \"\",\r\n    totalTime: \"\",\r\n    ingredients: [],\r\n    instructions: [],\r\n    requester: \"Bryson\",\r\n  };\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step + 1,\r\n    });\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1,\r\n    });\r\n  };\r\n\r\n  // Handle fields change\r\n  handleChange = (input) => (e) => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  // a more complicated state set where to logic is in ingredients.js and instructions.js\r\n  complexSetState = (props) => {\r\n    this.setState({ [props.key]: props.value });\r\n  };\r\n\r\n  createRecord = async () => {\r\n    let self = this;\r\n    base(\"Recipes\").create(\r\n      [\r\n        {\r\n          fields: {\r\n            Name: this.state.name,\r\n            Category: this.state.category,\r\n            totalTime: Number(this.state.totalTime),\r\n            prepTime: Number(this.state.prepTime),\r\n            cookTime: Number(this.state.cookTime),\r\n            Ingredients: JSON.stringify(this.state.ingredients),\r\n            Instructions: JSON.stringify(this.state.instructions),\r\n          },\r\n        },\r\n      ],\r\n      function (err, records) {\r\n        if (err) {\r\n          console.error(err);\r\n          alert(\"There was a problem submitting the data to Airtable.\");\r\n          return;\r\n        } else {\r\n          records.forEach(function (record) {\r\n            console.log(record.getId());\r\n          });\r\n          self.nextStep();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    const {\r\n      name,\r\n      category,\r\n      prepTime,\r\n      cookTime,\r\n      totalTime,\r\n      ingredients,\r\n      instructions,\r\n      requester,\r\n    } = this.state;\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <>\r\n            <Welcome requester={requester} nextStep={this.nextStep} />\r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            <RecipeName\r\n              handleChange={this.handleChange}\r\n              name={name}\r\n              nextStep={this.nextStep}\r\n            />\r\n            <ControlButton func={this.prevStep} text=\"Back\" />\r\n            <ControlButton func={this.nextStep} text=\"Next\" />\r\n          </>\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Category handleChange={this.handleChange} category={category} />\r\n            <ControlButton func={this.prevStep} text=\"Back\" />\r\n            <ControlButton func={this.nextStep} text=\"Next\" />\r\n          </>\r\n        );\r\n      case 4:\r\n        return (\r\n          <>\r\n            <Time\r\n              handleChange={this.handleChange}\r\n              time={totalTime}\r\n              prepTime={prepTime}\r\n              cookTime={cookTime}\r\n              nextStep={this.nextStep}\r\n              name={name}\r\n            />\r\n            <ControlButton func={this.prevStep} text=\"Back\" />\r\n            <ControlButton func={this.nextStep} text=\"Next\" />\r\n          </>\r\n        );\r\n      case 5:\r\n        return (\r\n          <>\r\n            <Ingredients\r\n              handleChange={this.complexSetState}\r\n              ingredients={ingredients}\r\n              nextStep={this.nextStep}\r\n              prevStep={this.prevStep}\r\n            />\r\n          </>\r\n        );\r\n      case 6:\r\n        return (\r\n          <>\r\n            <Instructions\r\n              handleChange={this.complexSetState}\r\n              ingredients={ingredients}\r\n              instructions={instructions}\r\n            />\r\n            <ControlButton func={this.prevStep} text=\"Back\" />\r\n            <button className=\"btn btn-success\" onClick={this.nextStep}>\r\n              Finish\r\n            </button>\r\n          </>\r\n        );\r\n      case 7:\r\n        return (\r\n          <>\r\n            <Instructions\r\n              handleChange={this.complexSetState}\r\n              ingredients={ingredients}\r\n              instructions={instructions}\r\n            />\r\n            <ModalConfim\r\n              prevStep={this.prevStep}\r\n              submit_record={this.createRecord}\r\n            />\r\n          </>\r\n        );\r\n      case 8:\r\n        return (\r\n          <>\r\n            <Thanks\r\n              name={name}\r\n              category={category}\r\n              totaltime={totalTime}\r\n              preptime={prepTime}\r\n              cooktime={cookTime}\r\n              ingredients={ingredients}\r\n              instructions={instructions}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return <div>Unknown Error</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserStepForm;\r\n","import RenderRecipe from \"./render_recipe\";\r\nvar Airtable = require(\"airtable\");\r\nvar base = new Airtable({ apiKey: process.env.REACT_APP_API_KEY }).base(\r\n  \"app3Gf3GAi6tb6C0t\"\r\n);\r\n\r\nlet myrecipes = [];\r\nbase(\"Recipes\")\r\n  .select({\r\n    view: \"Grid view\",\r\n  })\r\n  .eachPage(\r\n    function page(records, fetchNextPage) {\r\n      // This function (`page`) will get called for each page of records.\r\n\r\n      records.forEach(function (record) {\r\n        record.fields.Ingredients = JSON.parse(record.fields.Ingredients);\r\n        record.fields.Instructions = JSON.parse(record.fields.Instructions);\r\n        myrecipes.push(record.fields);\r\n      });\r\n\r\n      // To fetch the next page of records, call `fetchNextPage`.\r\n      // If there are more records, `page` will get called again.\r\n      // If there are no more records, `done` will get called.\r\n      fetchNextPage();\r\n    },\r\n    function done(err) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n    }\r\n  );\r\n\r\nconst RecipeView = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"m-3\">Recipe Book</h1>\r\n      <hr />\r\n      {myrecipes.map((recipe) => (\r\n        <RenderRecipe\r\n          name={recipe.Name}\r\n          category={recipe.Category}\r\n          totaltime={recipe.totalTime}\r\n          preptime={recipe.prepTime}\r\n          cooktime={recipe.cookTime}\r\n          ingredients={recipe.Ingredients}\r\n          instructions={recipe.Instructions}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeView;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport UserStepform from \"./components/user_step_form\";\r\nimport RecipeView from \"./components/recipe_view\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/recipes\">\r\n          <RecipeView />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <div className=\"user-form\">\r\n            <UserStepform />\r\n          </div>\r\n        </Route>\r\n        <Route path={\"/Recipe_Requester\" | \"/home\"}>\r\n          <div className=\"user-form\">\r\n            <UserStepform />\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}